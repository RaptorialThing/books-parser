Class view
Class vie-control
Class db-control
Class scrapper

view - печатает страницу с данными из переданными
vie-control - при получении ajax с поисковым запросом или запросом на скрапинг - начинает дейтсиве
отпрвяле запрос db-control или scrapper.
db-control - при получении запроса - создает соединение с бд и возврашает результат запроса.
scrapper - когда его вызывают соединяется удаляет данные в базе данных и вставляет новые спарсенные.


View - абстрактный класс. Нужен здесь для демонстрации возможности переопределять методы.

ViewStatic render_html() - выводит постоянную страницу. Все ее html-элементы. В том числе js-скрипт для AJAX передачи измененных данных для обновления данных, js-скрипт записывает их в суперглобальную переменную $POST[].

ViewDynamic render_html() - выводит динамический (меняющийся после каждого запроса) компонтент старницы - список книг.Получает на вход массив с ключ-значения выводимых параметров.

View-control - при установлении в $POST[''] начианет действовать. (POST устанваливаются при нажатии на submit сейчас) Если там book_name - отпраялет db-control запрос на поиск такой книги, потом отправляет полученный ответ ViewDynamic. При создании экземпляра этого класса он проверяет POST.
Если там scrapper - запускает scrapper.

DB-control - обращается к бд с поисковым запрсом, выдает ответ - массив.

Scrapper - удаляет таблицы и создает новые, заполняя спарсенными данными.


Документация новая (актуальная)

Scrapper реализован в виде отдельного скрипта, он может самостоятельно писать в бд.
Но только писать. Это не должно вызвать конфликтов, если во время записи контроллер бд наш начнет искать и считывать из бд.
Потому что, гипотеза. Бд не даст одновременно искать одному и писать другому и плюс к этому писать в бд может только скраппер, а контроллер может только считывать из базы.
Хорошо бы его переименовать в поиск типа db-search. Scrapper может лежать на другом сервере и таким образом основной проге достанется больше ресурсов, а у скраппера будут свои ресурсы. К тому же можно сделать так, чтобы скрапперов было много и все писали в бд через один контроллер скрапперов, то есть отдавали данные ему, а он уже копировал их в бд, если их там не было или сразу два режима 

View должен иметь какой то шаблонизатор, чтобы вставлять найденные штуки. А вторая view  отображать все остальное нестатичное.
Принимать и обрабатывать ответы от страницы можно отдельным модулем view control. Обновлять нужно только компоненты с новыми данными, то есть кидать в json например данные, а страница их прочитает и расставит на клиенте.

Сама страница может с помощью js готовить все данные и передавать их, оставляя загруженную страницу и обновляя только компоненты.
